#
#  This file is part of the Jikes RVM project (http://jikesrvm.org).
#
#  This file is licensed to You under the Eclipse Public License (EPL);
#  You may not use this file except in compliance with the License. You
#  may obtain a copy of the License at
#
#      http://www.opensource.org/licenses/eclipse-1.0.php
#
#  See the COPYRIGHT.txt file distributed with this work for information
#  regarding copyright ownership.
#
DECL
# Structure of DECL TAG FULL_NAME TYPE DEFAULT_VALUE {SHORT_NAME}
# TAG: E = Enumeration, V = Value, B = BitMask (TODO).
# TYPE: byte, int, String
DESCRIP
ENUMS
#Structure of ENUMS "ITEM_NAME QUERRY_NAME CMD_NAME"

V METHOD_SAMPLE_SIZE int 3
How many timer ticks of method samples to take before reporting method hotness to controller


E INITIAL_COMPILER byte IRC_BASE
Selection of initial compiler
"IRC_BASE baseIRC base" \
"IRC_OPT optIRC opt"

E RECOMPILATION_STRATEGY byte RS_SAMPLING
Selection of mechanism for identifying methods for optimizing recompilation
"RS_SAMPLING sampling sampling" \
"RS_COUNTERS counters counters"

E METHOD_LISTENER_TRIGGER byte ML_TIMER
What triggers us to take a method sample?
"ML_TIMER mlTimer timer" \
"ML_CBS mlCBS cbs"

E CALL_GRAPH_LISTENER_TRIGGER byte CGL_CBS
What triggers us to take a method sample?
"CGL_TIMER cgTimer timer" \
"CGL_CBS cgCBS cbs"

V LOGFILE_NAME String \"AOSLog.txt\" lf
Name of log file


V COMPILATION_ADVICE_FILE_OUTPUT String \"aosadvice.ca\" cafo
Name of advice file


V DYNAMIC_CALL_FILE_OUTPUT String \"aosadvice.dc\" dcfo
Name of dynamic call graph file


V COMPILER_DNA_FILE_NAME String \"\" dna
Name of compiler DNA file (default DNA will be used if no name is given).  Discussed in a comment at the head of CompilerDNA.java


V COMPILER_ADVICE_FILE_INPUT String null cafi
File containing information about the methods to Opt compile


V DYNAMIC_CALL_FILE_INPUT String null dcfi
File containing information about the hot call sites


V BULK_COMPILATION_VERBOSITY int 0
Control amount of verbosity for bulk compilation (larger means more)


V LOGGING_LEVEL int 0
Control amount of event logging (larger means more)


V FINAL_REPORT_LEVEL int 0
Control amount of info reported on exit (larger means more)


V DECAY_FREQUENCY int 100
After how many clock ticks should we decay


V DCG_DECAY_RATE double 1.1
What factor should we decay call graph edges hotness by


V DCG_SAMPLE_SIZE int 20
After how many timer interrupts do we update the weights in the dynamic call graph?


V INLINE_AI_SEED_MULTIPLIER double 3
Initial edge weight of call graph is set to AI_SEED_MULTIPLER * (1/AI_CONTROL_POINT)


V INLINE_AI_HOT_CALLSITE_THRESHOLD double 0.01
What percentage of the total weight of the dcg demarcates warm/hot edges 


V OFFLINE_INLINE_PLAN_NAME String \"AI_plan\" offlinePlan
Name of offline inline plan to be read and used for inlining


V EARLY_EXIT_TIME int 1000
Value of controller clock at which AOS should exit if EARLY_EXIT is true


V INVOCATION_COUNT_THRESHOLD int 1000
Invocation count at which a baseline compiled method should be recompiled


V INVOCATION_COUNT_OPT_LEVEL int 1
Opt level for recompilation in invocation count based system


V COUNTER_BASED_SAMPLE_INTERVAL int 1000
What is the sample interval for counter-based sampling


V MAX_OPT_LEVEL int 2
The maximum optimization level to enable.

